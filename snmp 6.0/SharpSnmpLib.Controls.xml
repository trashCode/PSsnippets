<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharpSnmpLib.Controls</name>
    </assembly>
    <members>
        <member name="T:Lextm.SharpSnmpLib.Messaging.AgentFoundEventArgs">
            <summary>
            Event arguments for agent found event.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.AgentFoundEventArgs.#ctor(System.Net.IPEndPoint,Lextm.SharpSnmpLib.Variable)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.AgentFoundEventArgs"/> class.
            </summary>
            <param name="agent">The agent.</param>
            <param name="variable">The variable.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.AgentFoundEventArgs.Agent">
            <summary>
            Gets the agent.
            </summary>
            <value>The agent.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.AgentFoundEventArgs.Variable">
            <summary>
            Gets the variable.
            </summary>
            <value>The variable.</value>
            <remarks>If the agent is SNMP v3, this is <code>null</code>.</remarks>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.DefaultListenerAdapter">
            <summary>
            Default listener adapter implementation.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.IListenerAdapter">
            <summary>
            Listener adapter interface.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.IListenerAdapter.Process(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.IPEndPoint,Lextm.SharpSnmpLib.Messaging.ListenerBinding)">
            <summary>
            Processes the message.
            </summary>
            <param name="message">Message.</param>
            <param name="sender">Sender.</param>
            <param name="binding">The binding.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.DefaultListenerAdapter.Process(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.IPEndPoint,Lextm.SharpSnmpLib.Messaging.ListenerBinding)">
            <summary>
            Processes the message.
            </summary>
            <param name="message">Message.</param>
            <param name="sender">Sender.</param>
            <param name="binding">The binding.</param>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Messaging.DefaultListenerAdapter.TrapV1Received">
            <summary>
            Occurs when a <see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV1Message"/> is received.
            </summary>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Messaging.DefaultListenerAdapter.TrapV2Received">
            <summary>
            Occurs when a <see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV2Message"/> is received.
            </summary>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Messaging.DefaultListenerAdapter.InformRequestReceived">
            <summary>
            Occurs when a <see cref="T:Lextm.SharpSnmpLib.Messaging.InformRequestMessage"/> is received.
            </summary>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Messaging.DefaultListenerAdapter.GetRequestReceived">
            <summary>
            Occurs when a <see cref="T:Lextm.SharpSnmpLib.Messaging.GetRequestMessage"/> is received.
            </summary>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Messaging.DefaultListenerAdapter.SetRequestReceived">
            <summary>
            Occurs when a SET request is received.
            </summary>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Messaging.DefaultListenerAdapter.GetNextRequestReceived">
            <summary>
            Occurs when a GET NEXT request is received.
            </summary>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Messaging.DefaultListenerAdapter.GetBulkRequestReceived">
            <summary>
            Occurs when a GET BULK request is received.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.Discoverer">
            <summary>
            Discoverer class to discover SNMP agents in the same network.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Discoverer.Discover(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,System.Int32)">
            <summary>
            Discovers the specified version.
            </summary>
            <param name="version">The version.</param>
            <param name="broadcastAddress">The broadcast address.</param>
            <param name="community">The community.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <remarks><paramref name="broadcastAddress"/> must be an IPv4 address. IPv6 is not yet supported here.</remarks>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Messaging.Discoverer.AgentFound">
            <summary>
            Occurs when an SNMP agent is found.
            </summary>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Messaging.Discoverer.ExceptionRaised">
            <summary>
            Occurs when an exception is raised.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.ExceptionRaisedEventArgs">
            <summary>
            Provides data for exception raised event.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ExceptionRaisedEventArgs.#ctor(System.Exception)">
            <summary>
            Creates an <see cref="T:Lextm.SharpSnmpLib.Messaging.ExceptionRaisedEventArgs"/>.
            </summary>
            <param name="ex">Exception.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ExceptionRaisedEventArgs.Exception">
            <summary>
            Exception.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.IListenerBinding">
            <summary>
            Listener binding interface.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.IListenerBinding.SendResponse(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.EndPoint)">
            <summary>
            Sends a response message.
            </summary>
            <param name="response">
            A <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.
            </param>
            <param name="receiver">Receiver.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.IListenerBinding.Endpoint">
            <summary>
            Endpoint.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.Listener">
            <summary>
            Listener class.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Messaging.Listener.ErrorIPv4NotSupported">
            <summary>
            Error message for non IP v4 OS.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Messaging.Listener.ErrorIPv6NotSupported">
            <summary>
            Error message for non IP v6 OS.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Listener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.Listener"/> class.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Listener.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Lextm.SharpSnmpLib.Messaging.Listener"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Listener.Dispose">
            <summary>
            Disposes resources in use.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Listener.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Component"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Listener.Stop">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Listener.Start">
            <summary>
            Starts this instance.
            </summary>
            <exception cref="T:Lextm.SharpSnmpLib.Messaging.PortInUseException"/>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Listener.AddBinding(System.Net.IPEndPoint)">
            <summary>
            Adds the binding.
            </summary>
            <param name="endpoint">The endpoint.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Listener.RemoveBinding(System.Net.IPEndPoint)">
            <summary>
            Removes the binding.
            </summary>
            <param name="endpoint">The endpoint.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Listener.ClearBindings">
            <summary>
            Clears the bindings.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Listener.Users">
            <summary>
            Gets or sets the users.
            </summary>
            <value>The users.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Listener.Active">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Lextm.SharpSnmpLib.Messaging.Listener"/> is active.
            </summary>
            <value><c>true</c> if active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Listener.Bindings">
            <summary>
            Gets or sets the bindings.
            </summary>
            <value>The bindings.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Listener.Adapters">
            <summary>
            Gets or sets the adapters.
            </summary>
            <value>The adapters.</value>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Messaging.Listener.ExceptionRaised">
            <summary>
            Occurs when an exception is raised.
            </summary>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Messaging.Listener.MessageReceived">
            <summary>
            Occurs when a message is received.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.ListenerBinding">
            <summary>
            Binding class for <see cref="T:Lextm.SharpSnmpLib.Messaging.Listener"/>.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ListenerBinding.#ctor(Lextm.SharpSnmpLib.Security.UserRegistry,System.Collections.Generic.IEnumerable{Lextm.SharpSnmpLib.Messaging.IListenerAdapter},System.Net.IPEndPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.ListenerBinding"/> class.
            </summary>
            <param name="users">The users.</param>
            <param name="adapters">The adapters.</param>
            <param name="endpoint">The endpoint.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ListenerBinding.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Component"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ListenerBinding.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Lextm.SharpSnmpLib.Messaging.Listener"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ListenerBinding.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ListenerBinding.SendResponse(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.EndPoint)">
            <summary>
            Sends a response message.
            </summary>
            <param name="response">
            A <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>.
            </param>
            <param name="receiver">Receiver.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ListenerBinding.Start">
            <summary>
            Starts this instance.
            </summary>
            <exception cref="T:Lextm.SharpSnmpLib.Messaging.PortInUseException"/>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ListenerBinding.Stop">
            <summary>
            Stops.
            </summary>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ListenerBinding.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents a <see cref="T:Lextm.SharpSnmpLib.Messaging.Listener"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Messaging.ListenerBinding.ExceptionRaised">
            <summary>
            Occurs when an exception is raised.
            </summary>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Messaging.ListenerBinding.MessageReceived">
            <summary>
            Occurs when a message is received.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.ListenerBinding.Endpoint">
            <summary>
            Gets or sets the endpoint.
            </summary>
            <value>The endpoint.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.Manager">
            <summary>
            SNMP manager component that provides SNMP operations.
            </summary>
            <remarks>
            <para>Drag this component into your form in designer, or create an instance in code.</para>
            <para>Currently only SNMP v1 and v2c operations are supported.</para>
            </remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.Manager"/> class.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.GetSingle(System.Net.IPEndPoint,System.String,Lextm.SharpSnmpLib.Variable)">
            <summary>
            Gets a variable bind.
            </summary>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name.</param>
            <param name="variable">Variable bind.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.GetSingle(System.String,System.String,Lextm.SharpSnmpLib.Variable)">
            <summary>
            Gets a variable bind.
            </summary>
            <param name="address">Address.</param>
            <param name="community">Community name.</param>
            <param name="variable">Variable bind.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.GetSingle(System.Net.IPAddress,System.String,Lextm.SharpSnmpLib.Variable)">
            <summary>
            Gets a variable bind.
            </summary>
            <param name="address">Address.</param>
            <param name="community">Community name.</param>
            <param name="variable">Variable bind.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.Get(System.Net.IPEndPoint,System.String,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Gets a list of variable binds.
            </summary>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name.</param>
            <param name="variables">Variable binds.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.Get(System.String,System.String,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Gets a list of variable binds.
            </summary>
            <param name="address">Address.</param>
            <param name="community">Community name.</param>
            <param name="variables">Variable binds.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.Get(System.Net.IPAddress,System.String,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Gets a list of variable binds.
            </summary>
            <param name="address">Address.</param>
            <param name="community">Community name.</param>
            <param name="variables">Variable binds.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.SetSingle(System.Net.IPEndPoint,System.String,Lextm.SharpSnmpLib.Variable)">
            <summary>
            Sets a variable bind.
            </summary>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name.</param>
            <param name="variable">Variable bind.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.SetSingle(System.Net.IPAddress,System.String,Lextm.SharpSnmpLib.Variable)">
            <summary>
            Sets a variable bind.
            </summary>
            <param name="address">Address.</param>
            <param name="community">Community name.</param>
            <param name="variable">Variable bind.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.SetSingle(System.String,System.String,Lextm.SharpSnmpLib.Variable)">
            <summary>
            Sets a variable bind.
            </summary>
            <param name="address">Address.</param>
            <param name="community">Community name.</param>
            <param name="variable">Variable bind.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.Set(System.Net.IPEndPoint,System.String,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Sets a list of variable binds.
            </summary>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name.</param>
            <param name="variables">Variable binds.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.Set(System.String,System.String,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Sets a list of variable binds.
            </summary>
            <param name="address">Address.</param>
            <param name="community">Community name.</param>
            <param name="variables">Variable binds.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.Set(System.Net.IPAddress,System.String,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Sets a list of variable binds.
            </summary>
            <param name="address">Address.</param>
            <param name="community">Community name.</param>
            <param name="variables">Variable binds.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.GetTable(System.Net.IPEndPoint,System.String,Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Gets a table of variables.
            </summary>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name.</param>
            <param name="table">Table OID.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.GetTable(System.Net.IPAddress,System.String,Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Gets a table of variables.
            </summary>
            <param name="address">Address.</param>
            <param name="community">Community name.</param>
            <param name="table">Table OID.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.GetTable(System.String,System.String,Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Gets a table of variables.
            </summary>
            <param name="address">Address.</param>
            <param name="community">Community name.</param>
            <param name="table">Table OID.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Manager.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.Manager"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Manager.DefaultVersion">
            <summary>
            Default protocol version for operations.
            </summary>
            <remarks>By default, the value is SNMP v1.</remarks>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Manager.Timeout">
            <summary>
            Timeout value.
            </summary>
            <remarks>By default, the value is 5,000-milliseconds (5 seconds).</remarks>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Manager.Objects">
            <summary>
            Gets or sets the objects.
            </summary>
            <value>The objects.</value>
            <remarks>Changed from 2.0: it will return null if not set.</remarks>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Manager.MaxRepetitions">
            <summary>
            Gets or sets the max repetitions for GET BULK operations.
            </summary>
            <value>The max repetitions.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.ManagerV1ListenerAdapter">
            <summary>
            Adapter for SNMP v1 manager.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ManagerV1ListenerAdapter.Process(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.IPEndPoint,Lextm.SharpSnmpLib.Messaging.ListenerBinding)">
            <summary>
            Processes the message.
            </summary>
            <param name="message">Message.</param>
            <param name="sender">Sender.</param>
            <param name="binding">The binding.</param>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Messaging.ManagerV1ListenerAdapter.TrapV1Received">
            <summary>
            Occurs when a <see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV1Message"/> is received.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.ManagerV2ListenerAdapter">
            <summary>
            Adapter for SNMP v2c manager.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ManagerV2ListenerAdapter.Process(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.IPEndPoint,Lextm.SharpSnmpLib.Messaging.ListenerBinding)">
            <summary>
            Processes the message.
            </summary>
            <param name="message">Message.</param>
            <param name="sender">Sender.</param>
            <param name="binding">The binding.</param>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Messaging.ManagerV2ListenerAdapter.TrapV2Received">
            <summary>
            Occurs when a <see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV2Message"/> is received.
            </summary>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Messaging.ManagerV2ListenerAdapter.InformRequestReceived">
            <summary>
            Occurs when a <see cref="T:Lextm.SharpSnmpLib.Messaging.InformRequestMessage"/> is received.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.ManagerV3ListenerAdapter">
            <summary>
            Description of ManagerV3ListenerAdapter.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.ManagerV3ListenerAdapter.Process(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.IPEndPoint,Lextm.SharpSnmpLib.Messaging.ListenerBinding)">
            <summary>
            Processes the message.
            </summary>
            <param name="message">Message.</param>
            <param name="sender">Sender.</param>
            <param name="binding">The binding.</param>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Messaging.ManagerV3ListenerAdapter.TrapV2Received">
            <summary>
            Occurs when a <see cref="T:Lextm.SharpSnmpLib.Messaging.TrapV2Message"/> is received.
            </summary>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Messaging.ManagerV3ListenerAdapter.InformRequestReceived">
            <summary>
            Occurs when a <see cref="T:Lextm.SharpSnmpLib.Messaging.InformRequestMessage"/> is received.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs">
            <summary>
            The <see cref="T:System.EventArgs"/> for one kind of <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>, used when that kind of message is received.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs.#ctor(System.Net.IPEndPoint,Lextm.SharpSnmpLib.Messaging.ISnmpMessage,Lextm.SharpSnmpLib.Messaging.IListenerBinding)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs"/>.
            </summary>
            <param name="sender">Sender.</param>
            <param name="message">The message received.</param>
            <param name="binding">The binding.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs.Message">
            <summary>
            The received message.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs.Sender">
            <summary>
            Sender.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs.Binding">
            <summary>
            Gets or sets the binding.
            </summary>
            <value>The binding.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs`1">
            <summary>
            The <see cref="T:System.EventArgs"/> for one kind of <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/>, used when that kind of message is received.
            </summary>
            <typeparam name="T">The <see cref="T:Lextm.SharpSnmpLib.Messaging.ISnmpMessage"/> object received.</typeparam>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs`1.#ctor(System.Net.IPEndPoint,`0,Lextm.SharpSnmpLib.Messaging.IListenerBinding)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs`1"/>.
            </summary>
            <param name="sender">Sender.</param>
            <param name="message">The message received.</param>
            <param name="binding">The binding.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs`1.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs`1.Message">
            <summary>
            The received message.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs`1.Sender">
            <summary>
            Sender.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs`1.Binding">
            <summary>
            Gets or sets the binding.
            </summary>
            <value>The binding.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.Messenger">
            <summary>
            Messenger class contains all static helper methods you need to send out SNMP messages.
            Static methods in Manager or Agent class will be removed in the future.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.Get(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},System.Int32)">
            <summary>
            Gets a list of variable binds.
            </summary>
            <param name="version">Protocol version.</param>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name.</param>
            <param name="variables">Variable binds.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.Set(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},System.Int32)">
            <summary>
            Sets a list of variable binds.
            </summary>
            <param name="version">Protocol version.</param>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name.</param>
            <param name="variables">Variable binds.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.Walk(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},System.Int32,Lextm.SharpSnmpLib.Messaging.WalkMode)">
            <summary>
            Walks.
            </summary>
            <param name="version">Protocol version.</param>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name.</param>
            <param name="table">OID.</param>
            <param name="list">A list to hold the results.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="mode">Walk mode.</param>
            <returns>
            Returns row count if the OID is a table. Otherwise this value is meaningless.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.HasNext(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.Variable,System.Int32,Lextm.SharpSnmpLib.Variable@)">
            <summary>
            Determines whether the specified seed has next item.
            </summary>
            <param name="version">The version.</param>
            <param name="endpoint">The endpoint.</param>
            <param name="community">The community.</param>
            <param name="seed">The seed.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="next">The next.</param>
            <returns>
                <c>true</c> if the specified seed has next item; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.BulkWalk(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},System.Int32,System.Int32,Lextm.SharpSnmpLib.Messaging.WalkMode,Lextm.SharpSnmpLib.Security.IPrivacyProvider,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Walks.
            </summary>
            <param name="version">Protocol version.</param>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name.</param>
            <param name="table">OID.</param>
            <param name="list">A list to hold the results.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="maxRepetitions">The max repetitions.</param>
            <param name="mode">Walk mode.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="report">The report.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.SendTrapV1(System.Net.EndPoint,System.Net.IPAddress,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,Lextm.SharpSnmpLib.GenericCode,System.Int32,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Sends a TRAP v1 message.
            </summary>
            <param name="receiver">Receiver.</param>
            <param name="agent">Agent.</param>
            <param name="community">Community name.</param>
            <param name="enterprise">Enterprise OID.</param>
            <param name="generic">Generic code.</param>
            <param name="specific">Specific code.</param>
            <param name="timestamp">Timestamp.</param>
            <param name="variables">Variable bindings.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.SendTrapV2(System.Int32,Lextm.SharpSnmpLib.VersionCode,System.Net.EndPoint,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Sends TRAP v2 message.
            </summary>
            <param name="version">Protocol version.</param>
            <param name="receiver">Receiver.</param>
            <param name="community">Community name.</param>
            <param name="enterprise">Enterprise OID.</param>
            <param name="timestamp">Timestamp.</param>
            <param name="variables">Variable bindings.</param>
            <param name="requestId">Request ID.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.SendInform(System.Int32,Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.UInt32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable},System.Int32,Lextm.SharpSnmpLib.Security.IPrivacyProvider,Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Sends INFORM message.
            </summary>
            <param name="requestId">The request id.</param>
            <param name="version">Protocol version.</param>
            <param name="receiver">Receiver.</param>
            <param name="community">Community name.</param>
            <param name="enterprise">Enterprise OID.</param>
            <param name="timestamp">Timestamp.</param>
            <param name="variables">Variable bindings.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="report">The report.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.GetTable(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.ObjectIdentifier,System.Int32,System.Int32,Lextm.SharpSnmpLib.IObjectRegistry)">
            <summary>
            Gets a table of variables.
            </summary>
            <param name="version">Protocol version.</param>
            <param name="endpoint">Endpoint.</param>
            <param name="community">Community name.</param>
            <param name="table">Table OID.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="maxRepetitions">The max repetitions.</param>
            <param name="registry">The registry.</param>
            <returns></returns>
            <remarks><paramref name="registry"/> can be null, which also disables table validation.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.Messenger.BulkHasNext(Lextm.SharpSnmpLib.VersionCode,System.Net.IPEndPoint,Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.Variable,System.Int32,System.Int32,System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable}@,Lextm.SharpSnmpLib.Security.IPrivacyProvider,Lextm.SharpSnmpLib.Messaging.ISnmpMessage@)">
            <summary>
            Determines whether the specified seed has next item.
            </summary>
            <param name="version">The version.</param>
            <param name="endpoint">The endpoint.</param>
            <param name="community">The community.</param>
            <param name="seed">The seed.</param>
            <param name="timeout">The time-out value, in milliseconds. The default value is 0, which indicates an infinite time-out period. Specifying -1 also indicates an infinite time-out period.</param>
            <param name="maxRepetitions">The max repetitions.</param>
            <param name="next">The next.</param>
            <param name="privacy">The privacy provider.</param>
            <param name="report">The report.</param>
            <returns>
            <c>true</c> if the specified seed has next item; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Messenger.NextRequestId">
            <summary>
            Gets the request counter.
            </summary>
            <value>The request counter.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Messenger.NextMessageId">
            <summary>
            Gets the message counter.
            </summary>
            <value>The message counter.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Messenger.MaxMessageSize">
            <summary>
            Max message size used in #SNMP. 
            </summary>
            <remarks>
            Please note that you can use any value for your own application. 
            Also this value may be changed in #SNMP in future releases.
            </remarks>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.Messenger.NextDiscovery">
            <summary>
            Returns a new discovery request.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.NumberGenerator">
            <summary>
            A counter that generates ID.
            </summary>
            <remarks>The request ID is used to identifier sessions.</remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.NumberGenerator.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Messaging.NumberGenerator"/> class.
            </summary>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.NumberGenerator.NextId">
            <summary>
            Returns next ID.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.PortInUseException">
            <summary>
            Exception raised when an IP endpoint is already in use.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.PortInUseException.#ctor">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.PortInUseException"/>.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.PortInUseException.#ctor(System.String)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.PortInUseException"/> instance with a specific <see cref="T:System.String"/>.
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.PortInUseException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.PortInUseException"/> instance with a specific <see cref="T:System.String"/> and an <see cref="T:System.Exception"/>.
            </summary>
            <param name="message">Message</param>
            <param name="inner">Inner exception</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.PortInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Messaging.PortInUseException"/> instance.
            </summary>
            <param name="info">Info</param>
            <param name="context">Context</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.PortInUseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets object data.
            </summary>
            <param name="info">Info</param>
            <param name="context">Context</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Messaging.PortInUseException.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Messaging.PortInUseException"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Messaging.PortInUseException.Endpoint">
            <summary>
            The endpoint already in use.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Messaging.WalkMode">
            <summary>
            Walk mode.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Messaging.WalkMode.Default">
            <summary>
            Default mode walk to the end of MIB view.
            </summary>
        </member>
        <member name="F:Lextm.SharpSnmpLib.Messaging.WalkMode.WithinSubtree">
            <summary>
            In this mode, walk within subtree.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.SysContact">
            <summary>
            sysContact object.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.ScalarObject">
            <summary>
            Scalar object interface.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.SnmpObject">
            <summary>
            SNMP basic object.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.ISnmpObject">
            <summary>
            SNMP object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ISnmpObject.MatchGetNext(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Matches the GET NEXT criteria.
            </summary>
            <param name="id">The ID in GET NEXT message.</param>
            <returns><c>null</c> if it does not match.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ISnmpObject.MatchGet(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Matches the GET criteria.
            </summary>
            <param name="id">The ID in GET message.</param>
            <returns><c>null</c> if it does not match.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpObject.MatchGetNext(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Matches the GET NEXT criteria.
            </summary>
            <param name="id">The ID in GET NEXT message.</param>
            <returns><c>null</c> if it does not match.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpObject.MatchGet(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Matches the GET criteria.
            </summary>
            <param name="id">The ID in GET message.</param>
            <returns><c>null</c> if it does not match.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ScalarObject.#ctor(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.ScalarObject"/> class.
            </summary>
            <param name="id">The ID.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ScalarObject.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.ScalarObject"/> class.
            </summary>
            <param name="dots">The ID string.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ScalarObject.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.ScalarObject"/> class.
            </summary>
            <param name="dots">The ID string.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ScalarObject.MatchGetNext(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Matches the GET NEXT criteria.
            </summary>
            <param name="id">The ID in GET NEXT message.</param>
            <returns><c>null</c> if it does not match.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ScalarObject.MatchGet(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Matches the GET criteria.
            </summary>
            <param name="id">The ID in GET message.</param>
            <returns><c>null</c> if it does not match.</returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.ScalarObject.Variable">
            <summary>
            Gets the variable.
            </summary>
            <value>The variable.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.ScalarObject.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.ScalarObject.Id">
            <summary>
            Gets the ID.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.SysContact.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.SysContact"/> class.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.SysContact.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.SysDescr">
            <summary>
            sysDescr object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.SysDescr.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.SysDescr"/> class.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.SysDescr.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.SysLocation">
            <summary>
            sysLocation object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.SysLocation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.SysLocation"/> class.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.SysLocation.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.SysName">
            <summary>
            sysName object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.SysName.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.SysName"/> class.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.SysName.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.SysObjectId">
            <summary>
            sysObjectId object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.SysObjectId.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.SysObjectId"/> class.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.SysObjectId.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.SysORLastChange">
            <summary>
            sysORLastChange object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.SysORLastChange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.SysORLastChange"/> class.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.SysORLastChange.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.SysORTable">
            <summary>
            sysORTable object.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.TableObject">
            <summary>
            Object that represents a table.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.TableObject.MatchGetNext(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Matches the GET NEXT criteria.
            </summary>
            <param name="id">The ID in GET NEXT message.</param>
            <returns><c>null</c> if it does not match.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.TableObject.MatchGet(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Matches the GET criteria.
            </summary>
            <param name="id">The ID in GET message.</param>
            <returns><c>null</c> if it does not match.</returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.TableObject.Objects">
            <summary>
            Gets the objects in the table.
            </summary>
            <value>The objects.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.SysORTable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.SysORTable"/> class.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.SysORTable.Objects">
            <summary>
            Gets the objects in the table.
            </summary>
            <value>The objects.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.SysServices">
            <summary>
            sysServices object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.SysServices.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.SysServices"/> class.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.SysServices.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Objects.SysUpTime">
            <summary>
            sysUpTime object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Objects.SysUpTime.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Objects.SysUpTime"/> class.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Objects.SysUpTime.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException">
            <summary>
            Access failure exception. 
            Raised when,
            1. GET operation is performed on a write-only object.
            2. SET operation is performed on a read-only object.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.AccessFailureException.#ctor">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"/>.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.AccessFailureException.#ctor(System.String)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"/> instance with a specific <see cref="T:System.String"/>.
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.AccessFailureException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"/> instance with a specific <see cref="T:System.String"/> and an <see cref="T:System.Exception"/>.
            </summary>
            <param name="message">Message</param>
            <param name="inner">Inner exception</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.AccessFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a <see cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"/> instance.
            </summary>
            <param name="info">Info</param>
            <param name="context">Context</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.AccessFailureException.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this <see cref="T:Lextm.SharpSnmpLib.Pipeline.AccessFailureException"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.SetMessageHandler">
            <summary>
            SET message handler.
            </summary>    
            <remarks>
            Follows RFC 3416 4.2.1.
            Not supported scenarios are, 
              wrongLength, 
              wrongEncoding, 
              wrongValue, 
              noCreation,
              inconsistentName,
              inconsistentValue,
              resourceUnavailable,
              commitFailed,
              undoFailed
            </remarks>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.IMessageHandler">
            <summary>
            Message handler interface.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.IMessageHandler.Handle(Lextm.SharpSnmpLib.Pipeline.SnmpContext,Lextm.SharpSnmpLib.Pipeline.ObjectStore)">
            <summary>
            Handles the specified message.
            </summary>
            <param name="context">The context.</param>
            <param name="store">The object store.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SetMessageHandler.Handle(Lextm.SharpSnmpLib.Pipeline.SnmpContext,Lextm.SharpSnmpLib.Pipeline.ObjectStore)">
            <summary>
            Handles the specified message.
            </summary>
            <param name="context">The context.</param>
            <param name="store">The object store.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.ComposedMembershipProvider">
            <summary>
            Composed membership provider, who owns internal providers. If the request is authenticated by any of the internal providers, it is considered as authenticated.
            </summary>    
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.IMembershipProvider">
            <summary>
            Membership provider interface.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.IMembershipProvider.AuthenticateRequest(Lextm.SharpSnmpLib.Pipeline.SnmpContext)">
            <summary>
            Authenticates the request.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ComposedMembershipProvider.#ctor(Lextm.SharpSnmpLib.Pipeline.IMembershipProvider[])">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.ComposedMembershipProvider"/> class.
            </summary>
            <param name="providers">The internal providers.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ComposedMembershipProvider.AuthenticateRequest(Lextm.SharpSnmpLib.Pipeline.SnmpContext)">
            <summary>
            Authenticates the request.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.EngineGroup">
            <summary>
            Engine group which contains all related objects.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.EngineGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.EngineGroup"/> class.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.EngineGroup.ReportCount">
            <summary>
            Count of handled REPORT messages.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.EngineGroup.EngineId">
            <summary>
            Gets the engine id.
            </summary>
            <value>The engine id.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.EngineGroup.EngineBoots">
            <summary>
            Gets or sets the engine boots.
            </summary>
            <value>The engine boots.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.EngineGroup.EngineTime">
            <summary>
            Gets the engine time.
            </summary>
            <value>The engine time.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.GetBulkMessageHandler">
            <summary>
            GET BULK message handler.
            </summary>    
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.GetBulkMessageHandler.Handle(Lextm.SharpSnmpLib.Pipeline.SnmpContext,Lextm.SharpSnmpLib.Pipeline.ObjectStore)">
            <summary>
            Handles the specified message.
            </summary>
            <param name="context">The context.</param>
            <param name="store">The object store.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.GetV1MessageHandler">
            <summary>
            GET message handler.
            </summary>
            <remarks>
            Follows RFC 1157, 4.1.2
            </remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.GetV1MessageHandler.Handle(Lextm.SharpSnmpLib.Pipeline.SnmpContext,Lextm.SharpSnmpLib.Pipeline.ObjectStore)">
            <summary>
            Handles the specified message.
            </summary>
            <param name="context">The context.</param>
            <param name="store">The object store.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.GetNextV1MessageHandler">
            <summary>
            GET NEXT message handler.
            </summary>    
            <remarks>
            Follows RFC 1157, 4.1.3
            </remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.GetNextV1MessageHandler.Handle(Lextm.SharpSnmpLib.Pipeline.SnmpContext,Lextm.SharpSnmpLib.Pipeline.ObjectStore)">
            <summary>
            Handles the specified message.
            </summary>
            <param name="context">The context.</param>
            <param name="store">The object store.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.GetNextMessageHandler">
            <summary>
            GET NEXT message handler.
            </summary>    
            <remarks>
            Follows RFC 3416 4.2.2.
            </remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.GetNextMessageHandler.Handle(Lextm.SharpSnmpLib.Pipeline.SnmpContext,Lextm.SharpSnmpLib.Pipeline.ObjectStore)">
            <summary>
            Handles the specified message.
            </summary>
            <param name="context">The context.</param>
            <param name="store">The object store.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.GetMessageHandler">
            <summary>
            GET message handler.
            </summary>
            <remarks>
            Follows RFC 3416 4.2.1.
            </remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.GetMessageHandler.Handle(Lextm.SharpSnmpLib.Pipeline.SnmpContext,Lextm.SharpSnmpLib.Pipeline.ObjectStore)">
            <summary>
            Handles the specified message.
            </summary>
            <param name="context">The context.</param>
            <param name="store">The object store.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.HandlerMapping">
            <summary>
            Handler mapping class, who is used to map incoming messages to their handlers.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.HandlerMapping.#ctor(System.String,System.String,Lextm.SharpSnmpLib.Pipeline.IMessageHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.HandlerMapping"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="command">The command.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.HandlerMapping.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.HandlerMapping"/> class.
            </summary>
            <param name="version">The version.</param>
            <param name="command">The command.</param>
            <param name="type">The type.</param>
            <param name="assembly">The assembly.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.HandlerMapping.CanHandle(Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Determines whether this instance can handle the specified message.
            </summary>
            <param name="message">The message.</param>
            <returns>
                <c>true</c> if this instance can handle the specified message; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.HandlerMapping.Handler">
            <summary>
            Gets the handler.
            </summary>
            <value>The handler.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.ILogger">
            <summary>
            Logger interface.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ILogger.Log(Lextm.SharpSnmpLib.Pipeline.SnmpContext)">
            <summary>
            Logs an entry.
            </summary>
            <param name="context">Message context.</param>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.InformMessageHandler">
            <summary>
            Message handler for INFORM.
            </summary>    
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.InformMessageHandler.Handle(Lextm.SharpSnmpLib.Pipeline.SnmpContext,Lextm.SharpSnmpLib.Pipeline.ObjectStore)">
            <summary>
            Handles the specified message.
            </summary>
            <param name="context">The context.</param>
            <param name="store">The object store.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.InformMessageHandler.InvokeMessageReceived(Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs{Lextm.SharpSnmpLib.Messaging.InformRequestMessage})">
            <summary>
            Invokes the message received event handler.
            </summary>
            <param name="e">The <see cref="T:Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Pipeline.InformMessageHandler.MessageReceived">
            <summary>
            Occurs when a message is received.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.MessageHandlerFactory">
            <summary>
            Message handler factory.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.MessageHandlerFactory.#ctor(Lextm.SharpSnmpLib.Pipeline.HandlerMapping[])">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.MessageHandlerFactory"/> class.
            </summary>
            <param name="mappings">The mappings.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.MessageHandlerFactory.GetHandler(Lextm.SharpSnmpLib.Messaging.ISnmpMessage)">
            <summary>
            Gets the handler.
            </summary>
            <param name="message">The message.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.NormalSnmpContext">
            <summary>
            Nomral SNMP context class. It is v1 and v2c specific.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.SnmpContext">
            <summary>
            SNMP context.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpContext.#ctor(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.IPEndPoint,Lextm.SharpSnmpLib.Security.UserRegistry,Lextm.SharpSnmpLib.Pipeline.EngineGroup,Lextm.SharpSnmpLib.Messaging.IListenerBinding)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.SnmpContext"/> class.
            </summary>
            <param name="request">The request.</param>
            <param name="sender">The sender.</param>
            <param name="users">The users.</param>
            <param name="group">The engine core group.</param>
            <param name="binding">The binding.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpContext.SendResponse">
            <summary>
            Sends out response message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpContext.HandleAuthenticationFailure">
            <summary>
            Handles the authentication failure.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpContext.GenerateResponse(System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Generates the response.
            </summary>
            <param name="variables">The variables.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpContext.CopyRequest(Lextm.SharpSnmpLib.ErrorCode,System.Int32)">
            <summary>
            Copies the request variable bindings to response.
            </summary>
            <param name="status">The status.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpContext.HandleMembership">
            <summary>
            Handles the membership authentication.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpContext.GenerateTooBig">
            <summary>
            Generates too big message.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.SnmpContext.Binding">
            <summary>
            Gets or sets the binding.
            </summary>
            <value>The binding.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.SnmpContext.CreatedTime">
            <summary>
            Gets the created time.
            </summary>
            <value>The created time.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.SnmpContext.Request">
            <summary>
            Gets the request.
            </summary>
            <value>The request.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.SnmpContext.Users">
            <summary>
            Gets the users.
            </summary>
            <value>The users.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.SnmpContext.Response">
            <summary>
            Gets the response.
            </summary>
            <value>The response.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.SnmpContext.Sender">
            <summary>
            Gets the sender.
            </summary>
            <value>The sender.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.SnmpContext.Group">
            <summary>
            Gets or sets the objects.
            </summary>
            <value>The objects.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.SnmpContext.TooBig">
            <summary>
            Gets a value indicating whether [too big].
            </summary>
            <value><c>true</c> if the response is too big; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.NormalSnmpContext.#ctor(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.IPEndPoint,Lextm.SharpSnmpLib.Security.UserRegistry,Lextm.SharpSnmpLib.Messaging.IListenerBinding)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.NormalSnmpContext"/> class.
            </summary>
            <param name="request">The request.</param>
            <param name="sender">The sender.</param>
            <param name="users">The users.</param>
            <param name="binding">The binding.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.NormalSnmpContext.HandleAuthenticationFailure">
            <summary>
            Handles the authentication failure.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.NormalSnmpContext.CopyRequest(Lextm.SharpSnmpLib.ErrorCode,System.Int32)">
            <summary>
            Copies the request variable bindings to response.
            </summary>
            <param name="status">The status.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.NormalSnmpContext.GenerateTooBig">
            <summary>
            Generates too big message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.NormalSnmpContext.HandleMembership">
            <summary>
            Handles the membership.
            </summary>
            <returns>Always returns <code>false</code>.</returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.NormalSnmpContext.GenerateResponse(System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Generates the response.
            </summary>
            <param name="variables">The variables.</param>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.NullMessageHandler">
            <summary>
            A placeholder.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.NullMessageHandler.Handle(Lextm.SharpSnmpLib.Pipeline.SnmpContext,Lextm.SharpSnmpLib.Pipeline.ObjectStore)">
            <summary>
            Handles the specified message.
            </summary>
            <param name="context">The context.</param>
            <param name="store">The object store.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.ObjectStore">
            <summary>
            SNMP object store, who holds all implemented SNMP objects in the agent.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ObjectStore.GetObject(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Gets the object.
            </summary>
            <param name="id">The oid.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ObjectStore.GetNextObject(Lextm.SharpSnmpLib.ObjectIdentifier)">
            <summary>
            Gets the next object.
            </summary>
            <param name="id">The oid.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.ObjectStore.Add(Lextm.SharpSnmpLib.Pipeline.ISnmpObject)">
            <summary>
            Adds the specified <seealso cref="T:Lextm.SharpSnmpLib.Pipeline.ISnmpObject"/>.
            </summary>
            <param name="newObject">The object.</param>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.SecureSnmpContext">
            <summary>
            Secure SNMP context. It is specific to v3.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SecureSnmpContext.#ctor(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.IPEndPoint,Lextm.SharpSnmpLib.Security.UserRegistry,Lextm.SharpSnmpLib.Pipeline.EngineGroup,Lextm.SharpSnmpLib.Messaging.IListenerBinding)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.SecureSnmpContext"/> class.
            </summary>
            <param name="request">The request.</param>
            <param name="sender">The sender.</param>
            <param name="users">The users.</param>
            <param name="group">The engine core group.</param>
            <param name="binding">The binding.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SecureSnmpContext.HandleAuthenticationFailure">
            <summary>
            Handles the authentication failure.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SecureSnmpContext.GenerateTooBig">
            <summary>
            Generates too big message.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SecureSnmpContext.HandleMembership">
            <summary>
            Handles the membership.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SecureSnmpContext.GenerateResponse(System.Collections.Generic.IList{Lextm.SharpSnmpLib.Variable})">
            <summary>
            Generates the response.
            </summary>
            <param name="variables">The variables.</param>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.SetV1MessageHandler">
            <summary>
            SET message handler.
            </summary>    
            <remarks>
            Follows RFC 1157, 4.1.5
            </remarks>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SetV1MessageHandler.Handle(Lextm.SharpSnmpLib.Pipeline.SnmpContext,Lextm.SharpSnmpLib.Pipeline.ObjectStore)">
            <summary>
            Handles the specified message.
            </summary>
            <param name="context">The context.</param>
            <param name="store">The object store.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.SnmpApplication">
            <summary>
            SNMP application class, who is a pipeline for message processing.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpApplication.#ctor(Lextm.SharpSnmpLib.Pipeline.SnmpApplicationFactory,Lextm.SharpSnmpLib.Pipeline.ILogger,Lextm.SharpSnmpLib.Pipeline.ObjectStore,Lextm.SharpSnmpLib.Pipeline.IMembershipProvider,Lextm.SharpSnmpLib.Pipeline.MessageHandlerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.SnmpApplication"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="logger">The logger.</param>
            <param name="store">The store.</param>
            <param name="provider">The provider.</param>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpApplication.Init(Lextm.SharpSnmpLib.Pipeline.SnmpContext)">
            <summary>
            Inits the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpApplication.Process">
            <summary>
            Processes an incoming request.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpApplication.CompleteProcessing">
            <summary>
            Completes the processing.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.SnmpApplication.Context">
            <summary>
            Gets the context.
            </summary>
            <value>The context.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.SnmpApplication.ProcessingFinished">
            <summary>
            Gets a value indicating whether processing is finished.
            </summary>
            <value><c>true</c> if processing is finished; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.SnmpApplicationFactory">
            <summary>
            SNMP application factory, who holds all pipeline instances.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpApplicationFactory.#ctor(Lextm.SharpSnmpLib.Pipeline.ILogger,Lextm.SharpSnmpLib.Pipeline.ObjectStore,Lextm.SharpSnmpLib.Pipeline.IMembershipProvider,Lextm.SharpSnmpLib.Pipeline.MessageHandlerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.SnmpApplicationFactory"/> class.
            </summary>
            <param name="logger">The logger.</param>
            <param name="store">The store.</param>
            <param name="membershipProvider">The membership provider.</param>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpApplicationFactory.#ctor(Lextm.SharpSnmpLib.Pipeline.ObjectStore,Lextm.SharpSnmpLib.Pipeline.IMembershipProvider,Lextm.SharpSnmpLib.Pipeline.MessageHandlerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.SnmpApplicationFactory"/> class.
            </summary>
            <param name="store">The store.</param>
            <param name="membershipProvider">The membership provider.</param>
            <param name="factory">The factory.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpApplicationFactory.Create(Lextm.SharpSnmpLib.Pipeline.SnmpContext)">
            <summary>
            Creates a pipeline for the specified context.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpApplicationFactory.Reuse(Lextm.SharpSnmpLib.Pipeline.SnmpApplication)">
            <summary>
            Reuses the specified pipeline.
            </summary>
            <param name="application">The application.</param>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.SnmpContextFactory">
            <summary>
            SNMP context factory.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpContextFactory.Create(Lextm.SharpSnmpLib.Messaging.ISnmpMessage,System.Net.IPEndPoint,Lextm.SharpSnmpLib.Security.UserRegistry,Lextm.SharpSnmpLib.Pipeline.EngineGroup,Lextm.SharpSnmpLib.Messaging.IListenerBinding)">
            <summary>
            Creates the specified request.
            </summary>
            <param name="request">The request.</param>
            <param name="sender">The sender.</param>
            <param name="users">The users.</param>
            <param name="group">The engine group.</param>
            <param name="binding">The binding.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.SnmpEngine">
            <summary>
            SNMP engine, who is the core of an SNMP entity (manager or agent).
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpEngine.#ctor(Lextm.SharpSnmpLib.Pipeline.SnmpApplicationFactory,Lextm.SharpSnmpLib.Messaging.Listener,Lextm.SharpSnmpLib.Pipeline.EngineGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.SnmpEngine"/> class.
            </summary>
            <param name="factory">The factory.</param>
            <param name="listener">The listener.</param>
            <param name="group">Engine core @group.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpEngine.Dispose">
            <summary>
            Disposes resources in use.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpEngine.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Lextm.SharpSnmpLib.Pipeline.SnmpEngine"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpEngine.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Component"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpEngine.Start">
            <summary>
            Starts the engine.
            </summary>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.SnmpEngine.Stop">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.SnmpEngine.Listener">
            <summary>
            Gets or sets the listener.
            </summary>
            <value>The listener.</value>
        </member>
        <member name="P:Lextm.SharpSnmpLib.Pipeline.SnmpEngine.Active">
            <summary>
            Gets a value indicating whether this <see cref="T:Lextm.SharpSnmpLib.Pipeline.SnmpEngine"/> is active.
            </summary>
            <value><c>true</c> if active; otherwise, <c>false</c>.</value>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Pipeline.SnmpEngine.ExceptionRaised">
            <summary>
            Occurs when an exception is raised.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.TrapV1MessageHandler">
            <summary>
            Message handler for TRAP v1.
            </summary>    
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.TrapV1MessageHandler.Handle(Lextm.SharpSnmpLib.Pipeline.SnmpContext,Lextm.SharpSnmpLib.Pipeline.ObjectStore)">
            <summary>
            Handles the specified message.
            </summary>
            <param name="context">The context.</param>
            <param name="store">The object store.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.TrapV1MessageHandler.InvokeMessageReceived(Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs{Lextm.SharpSnmpLib.Messaging.TrapV1Message})">
            <summary>
            Invokes the message received event handler.
            </summary>
            <param name="e">The <see cref="T:Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Pipeline.TrapV1MessageHandler.MessageReceived">
            <summary>
            Occurs when a message is received.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.TrapV2MessageHandler">
            <summary>
            Message handler for TRAP v2.
            </summary>    
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.TrapV2MessageHandler.Handle(Lextm.SharpSnmpLib.Pipeline.SnmpContext,Lextm.SharpSnmpLib.Pipeline.ObjectStore)">
            <summary>
            Handles the specified message.
            </summary>
            <param name="context">The context.</param>
            <param name="store">The object store.</param>
            <returns></returns>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.TrapV2MessageHandler.InvokeMessageReceived(Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs{Lextm.SharpSnmpLib.Messaging.TrapV2Message})">
            <summary>
            Invokes the message received event handler.
            </summary>
            <param name="e">The <see cref="T:Lextm.SharpSnmpLib.Messaging.MessageReceivedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Lextm.SharpSnmpLib.Pipeline.TrapV2MessageHandler.MessageReceived">
            <summary>
            Occurs when a message is received.
            </summary>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.Version1MembershipProvider">
            <summary>
            SNMP version 1 membership provider, who checks community names for security.
            </summary>    
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.Version1MembershipProvider.#ctor(Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.Version1MembershipProvider"/> class.
            </summary>
            <param name="getCommunity">The get community.</param>
            <param name="setCommunity">The set community.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.Version1MembershipProvider.AuthenticateRequest(Lextm.SharpSnmpLib.Pipeline.SnmpContext)">
            <summary>
            Authenticates the request.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.Version2MembershipProvider">
            <summary>
            SNMP version 2 membership provider, who checks community names for security.
            </summary>    
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.Version2MembershipProvider.#ctor(Lextm.SharpSnmpLib.OctetString,Lextm.SharpSnmpLib.OctetString)">
            <summary>
            Initializes a new instance of the <see cref="T:Lextm.SharpSnmpLib.Pipeline.Version2MembershipProvider"/> class.
            </summary>
            <param name="getCommunity">The get community.</param>
            <param name="setCommunity">The set community.</param>
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.Version2MembershipProvider.AuthenticateRequest(Lextm.SharpSnmpLib.Pipeline.SnmpContext)">
            <summary>
            Authenticates the request.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="T:Lextm.SharpSnmpLib.Pipeline.Version3MembershipProvider">
            <summary>
            SNMP version 3 membership provider. Not yet implemented.
            </summary>    
        </member>
        <member name="M:Lextm.SharpSnmpLib.Pipeline.Version3MembershipProvider.AuthenticateRequest(Lextm.SharpSnmpLib.Pipeline.SnmpContext)">
            <summary>
            Authenticates the request.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
    </members>
</doc>
